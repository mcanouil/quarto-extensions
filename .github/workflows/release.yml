name: "Release: Create Release"

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - CITATION.cff

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Create GitHub App token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        shell: bash
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          APP_SLUG: ${{ steps.app-token.outputs.app-slug }}
        run: echo "user-id=$(gh api "/users/${APP_SLUG}[bot]" --jq .id)" >> "${GITHUB_OUTPUT}"

      - name: Git Config
        env:
          APP_SLUG: ${{ steps.app-token.outputs.app-slug }}
          USER_ID: ${{ steps.get-user-id.outputs.user-id }}
        shell: bash
        run: |
          git config --global user.name '${APP_SLUG}[bot]'
          git config --global user.email '${USER_ID}+${APP_SLUG}[bot]@users.noreply.github.com'

      - name: Update branch
        run: |
          git fetch --all
          git checkout main
          git pull origin main

      - name: Release extension on GitHub
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        shell: bash
        run: |
          DATE=$(grep "^date-released:" CITATION.cff | sed 's/date-released: //;s/"//g')
          VERSION=$(grep "^version:" CITATION.cff | sed 's/version: //;s/"//g')
          gh release create ${VERSION} --title ${DATE} --generate-notes
