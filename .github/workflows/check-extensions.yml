name: Check Extensions

on:
  workflow_dispatch:
  pull_request:
  pull_request_review:
    types: [submitted]

permissions:
  pull-requests: read

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NUMBER: ${{ github.event.pull_request.number }}

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  check-duplicate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for duplicates
        shell: bash
        run: |
          FILE="extensions/quarto-extensions.csv"
          error=false
          add_extension=$(gh pr view "${NUMBER}" --json files --jq ".files[] | select(.path == \"${FILE}\")")
          if [[ -n "${add_extension}" ]]; then
            duplicates=$(sort -f "${FILE}" | uniq -di)
            if [[ -n "${duplicates}" ]]; then
              while read -r duplicate; do
                grep -n "${duplicate}" "${FILE}" | tail -n +2 | while read -r line ; do
                  lineNumber=$(echo ${line} | cut -d: -f1)
                  echo "::error file=${FILE},line=${lineNumber},endLine=${lineNumber},title=Duplicate Entry::Duplicate value \"${duplicate}\" found"
                  error=true
                done
              done <<< "${duplicates}"
            fi
            if [[ "${error}" = true ]]; then
              exit 1
            fi
          fi
  check-topics:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for topics
        shell: bash
        run: |
          FILE="extensions/quarto-extensions.csv"
          error=false
          add_extension=$(gh pr view "${NUMBER}" --json files --jq ".files[] | select(.path == \"${FILE}\")")
          if [[ -n "${add_extension}" ]]; then
            gh pr diff ${NUMBER} --patch | awk '/\+\+\+ b\/extensions\/quarto-extensions\.csv/{flag=1; next} flag && /^\+/' | sed 's/^+//' > diff.patch
            if [[ -s diff.patch ]]; then
              while IFS=, read -r repo; do
                repo=$(echo "$repo" | cut -d'/' -f1-2)
                repo_topics=$(gh repo view --json repositoryTopics "${repo}" --jq ".repositoryTopics")
                if [[ -z "${repo_topics}" ]]; then
                  lineNumber=$(grep -n "${repo}" ${FILE} | cut -d: -f1)
                  echo "::error file=${FILE},line=${lineNumber},endLine=${lineNumber}::Repository \"${repo}\" is missing topics!"
                  error=true
                fi
              done < diff.patch
            fi
            if [[ "${error}" = true ]]; then
              exit 1
            fi
          fi
  check-description:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for description
        shell: bash
        run: |
          FILE="extensions/quarto-extensions.csv"
          error=false
          add_extension=$(gh pr view "${NUMBER}" --json files --jq ".files[] | select(.path == \"${FILE}\")")
          if [[ -n "${add_extension}" ]]; then
            gh pr diff ${NUMBER} --patch | awk '/\+\+\+ b\/extensions\/quarto-extensions\.csv/{flag=1; next} flag && /^\+/' | sed 's/^+//' > diff.patch
            if [[ -s diff.patch ]]; then
              while IFS=, read -r repo; do
                repo=$(echo "$repo" | cut -d'/' -f1-2)
                repo_description=$(gh repo view --json description "${repo}" --jq ".description")
                if [[ -z "${repo_description}" ]]; then
                  lineNumber=$(grep -n "${repo}" ${FILE} | cut -d: -f1)
                  echo "::error file=${FILE},line=${lineNumber},endLine=${lineNumber}::Repository \"${repo}\" is missing description!"
                  error=true
                fi
              done < diff.patch
            fi
            if [[ "${error}" = true ]]; then
              exit 1
            fi
          fi
  check-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for release/tag
        shell: bash
        run: |
          FILE="extensions/quarto-extensions.csv"
          error=false
          add_extension=$(gh pr view "${NUMBER}" --json files --jq ".files[] | select(.path == \"${FILE}\")")
          if [[ -n "${add_extension}" ]]; then
            gh pr diff ${NUMBER} --patch | awk '/\+\+\+ b\/extensions\/quarto-extensions\.csv/{flag=1; next} flag && /^\+/' | sed 's/^+//' > diff.patch
            if [[ -s diff.patch ]]; then
              while IFS=, read -r repo; do
                repo=$(echo "$repo" | cut -d'/' -f1-2)
                repo_release=$(gh repo view --json latestRelease "${repo}" --jq ".latestRelease")
                if [[ -z "${repo_release}" ]]; then
                  lineNumber=$(grep -n "${repo}" ${FILE} | cut -d: -f1)
                  echo "::error file=${FILE},line=${lineNumber},endLine=${lineNumber}::Repository \"${repo}\" is missing release/tag!"
                  error=true
                fi
              done < diff.patch
            fi
            if [[ "${error}" = true ]]; then
              exit 1
            fi
          fi
  check-redirection:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for release/tag
        shell: bash
        run: |
          FILE="extensions/quarto-extensions.csv"
          error=false
          while IFS=, read -r entry; do
            repo=$(echo "${repo}" | cut -d'/' -f1-2)
            if curl -I -s "https://github.com/${repo}" | grep -q "HTTP/.* 30[127]"; then
              redirection_target=$(curl -Ls -o /dev/null -w "%{url_effective}" "https://github.com/${repo}")
              redirection_target=${redirection_target#"https://github.com/"}
              error_message="Repository \"${repo}\" is a redirected to \"${redirection_target}\"\!"
              lineNumber=$(grep -n "${repo}" ${FILE} | cut -d: -f1)
              echo "::error file=${FILE},line=${lineNumber},endLine=${lineNumber}::${error_message}"
              error=true
            fi
          done < <(sort -f "${FILE}")
          if [[ "${error}" = true ]]; then
            exit 1
          fi
